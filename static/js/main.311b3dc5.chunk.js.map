{"version":3,"sources":["web3.js","sale.js","App.js","serviceWorker.js","index.js"],"names":["web3","Web3","window","currentProvider","sale","eth","Contract","constant","inputs","name","type","outputs","payable","stateMutability","anonymous","indexed","App","state","price","tokenContract","tokensSold","amount","value","errorMessage","loading","onSubmit","_callee","event","accounts","regenerator_default","a","wrap","_context","prev","next","preventDefault","_this","setState","getAccounts","sent","methods","buyTokens","send","from","utils","toWei","location","reload","t0","message","stop","this","call","_this2","react_default","createElement","Container","style","marginTop","marginBottom","textAlign","Header","as","color","Image","circular","size","src","className","width","margin","Card","fluid","Content","Description","extra","href","Button","basic","floated","Form","error","Field","Input","label","labelPosition","onChange","target","Message","header","content","positive","floating","Component","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.311b3dc5.chunk.js","sourcesContent":["import Web3 from 'web3'\n\nconst web3 = new Web3(window.web3.currentProvider)\n\nexport default web3","import web3 from './web3'\n\n\nconst address = '0x28Cb0Cf8ffF4eAb7c5751812BCC660812EC6F069'\n\nconst abi = [{\n    \"constant\": false,\n    \"inputs\": [{\n        \"name\": \"_numberOfTokens\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"buyTokens\",\n    \"outputs\": [],\n    \"payable\": true,\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n}, {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"endSale\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"tokensSold\",\n    \"outputs\": [{\n        \"name\": \"\",\n        \"type\": \"uint256\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"tokenContract\",\n    \"outputs\": [{\n        \"name\": \"\",\n        \"type\": \"address\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"price\",\n    \"outputs\": [{\n        \"name\": \"\",\n        \"type\": \"uint256\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"saleEnd\",\n    \"outputs\": [{\n        \"name\": \"\",\n        \"type\": \"bool\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"name\": \"_tokenContract\",\n        \"type\": \"address\"\n    }, {\n        \"name\": \"_price\",\n        \"type\": \"uint256\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n}, {\n    \"anonymous\": false,\n    \"inputs\": [{\n        \"indexed\": false,\n        \"name\": \"buyer\",\n        \"type\": \"address\"\n    }, {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"Sold\",\n    \"type\": \"event\"\n}]\n\nexport default new web3.eth.Contract(abi, address)","import React, { Component } from 'react';\nimport { Container, Header, Image, Card, Button, Message, Form, Input } from 'semantic-ui-react'\nimport web3 from './web3'\nimport sale from './sale'\n\nclass App extends Component {\n  state = {\n    price: '',\n    tokenContract: '',\n    tokensSold: '',\n    amount: '',\n    value: '',\n    errorMessage: '',\n    loading: false\n  }\n  async componentDidMount() {\n    const price = await sale.methods.price().call()\n    const tokenContract = await sale.methods.tokenContract().call()\n    const tokensSold = await sale.methods.tokensSold().call()\n\n    this.setState({ price, tokenContract, tokensSold })\n  }\n\n  onSubmit = async (event) => {\n    event.preventDefault()\n\n    this.setState({ loading: true, errorMessage: '' })\n\n    try {\n      const accounts = await web3.eth.getAccounts()\n\n      await sale.methods.buyTokens(this.state.amount).send({\n        from: accounts[0],\n        value: web3.utils.toWei(this.state.value, 'ether')\n      })\n\n      window.location.reload()\n    } catch (err) {\n      this.setState({ errorMessage: err.message })\n    }\n\n    this.setState({ loading: false })    \n  }\n\n  render() {    \n   \n    return (\n      <Container>\n        <div style={{ marginTop: '20px', marginBottom: '5px', textAlign: 'center' }}>\n            <Header as='h1' color='green'>                \n                    <Image circular size='mini' src='https://res.cloudinary.com/dpjg3yr24/image/upload/v1548944190/cat-1-.jpg' />                \n                ICO Crowdsale - Kitten Token                \n                    <Image circular size='mini' src='https://res.cloudinary.com/dpjg3yr24/image/upload/v1548944190/cat-1-.jpg' />                \n            </Header>\n            <Header>\n                <i className=\"fab fa-ethereum\"></i>\n            </Header>\n        </div>\n        <div style={{ width: '68%', margin: '0 auto', marginTop: '15px' }}>\n          <Card fluid color='green'>\n            <Card.Content>\n              <Card.Header style={{ textAlign: 'center' }}>Kitten Token</Card.Header>\n              <Card.Description>Token symbol: KITN</Card.Description>\n              <Card.Description>Token address: {this.state.tokenContract}</Card.Description>\n              <Card.Description>Token price: {this.state.price / 1000000000000000000} ether per Kitten Token</Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n              <div>\n                <a href='https://kitten-token.herokuapp.com/actions/balance'>\n                  <Button basic color='green' floated='right'>View Balance</Button>\n                </a>\n              </div>\n            </Card.Content>\n          </Card>\n\n          <Card fluid color='green' style={{ marginTop: '20px' }}>\n            <Card.Content>\n              <Card.Header style={{ textAlign: 'center' }}>Buy Kitten Tokens</Card.Header>\n              <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n\n                <Form.Field>\n                  <label>Amount of tokens</label>\n                  <Input\n                    label=\"amount of Kitten Tokens\"\n                    labelPosition=\"right\"\n                    value={this.state.amount}\n                    onChange={event => this.setState({ amount: event.target.value })}\n                  />\n                </Form.Field>\n\n                <Form.Field>\n                  <label>Ethers</label>\n                  <Input\n                    label=\"ethers to buy Kitten Tokens\"\n                    labelPosition=\"right\"\n                    value={this.state.value}\n                    onChange={event => this.setState({ value: event.target.value })}\n                  />\n                </Form.Field>\n\n                <Message error header=\"Oops!\" content={this.state.errorMessage} />\n                <Button loading={this.state.loading} positive size='massive' type='submit'>Buy</Button>\n              </Form>\n            </Card.Content>\n          </Card>\n\n          <div style={{ marginTop: '20px', textAlign: 'center' }}>\n            <Message color='green' size=\"huge\" floating>\n              {this.state.tokensSold} of 900,000 Kitten Tokens have been sold!\n            </Message>\n          </div>\n\n        </div>\n       \n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}